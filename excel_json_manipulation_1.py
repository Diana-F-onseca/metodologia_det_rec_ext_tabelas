# -*- coding: utf-8 -*-
"""excel_json_manipulation_1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1bpBAb3hzcAO6-Kg06qFMjy8WBa6Ah_Un
"""

import json
import pandas as pd
# Função para converter os dados formatados para JSON
def converter_para_json(dados_formatados, nome_ficheiro):
    json_data = {"tables": []}
    for item in dados_formatados:
        json_data["tables"].append({
            "text": item[0],
            "row": item[1],
            "column": item[2],
            "left": item[3],
            "top": item[4],
            "width": item[5],
            "height": item[6],
            "top_left": item[7],
            "bottom_right": item[8]
        })

    json_filename = "output_data/tableExtraction/jsons/" + nome_ficheiro + ".json"
    with open(json_filename, 'w', encoding='utf-8') as jsonfile:
        json.dump(json_data, jsonfile, ensure_ascii=False, indent=4)
    return json_data

# Função para criar um ficheiro de Excel a partir do ficheiro JSON
def create_excel_from_json(json_data, excel_path):
    data = []
    for cell in json_data['tables']:
        row_info = (cell['row'], cell['column'], cell['text'])
        data.append(row_info)
    df = pd.DataFrame(data, columns=['Row', 'Column', 'Text'])
    df_combined = df.groupby(['Row', 'Column']).agg({'Text': ' '.join}).reset_index()
    df_pivot = df_combined.pivot(index='Row', columns='Column', values='Text')
    df_pivot.to_excel("output_data/tableExtraction/excels/" + excel_path + ".xlsx", index=False)